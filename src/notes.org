* TASKS [0/0]
** FUNCTIONAL [0/0]
*** NEXT [2/3]
- [X] Pencil action that just does DrawOnce with blending
- [ ] Project::new
- [ ] Action:redo because you did an idiot job on Action:undo
- [X] new branch to implement savefile on Project
*** AT SOME POINT IN TIME [0/0]
**** SMALL CHANGE [1/4]
- [X] Png::open errors returned as debug strings similar to Png::save
- [ ] Camera.get_focus() so that Camera.focus can be made private
- [ ] RectangularOutline Action
- [ ] Png to/fro Scene: fill more color-type/bit-depth combos
**** MEDIUM CHANGE [0/1]
- [ ] camera should be able to set focus to coord not in scene, just not be able to set_pixel there
**** LARGE CHANGE [0/2]
- [ ] change-tree instead of change-stack, doesn't forget future changes after changes in undoed state
- [ ] lower-level (elements) error literature
** NON-FUNCTIONAL [0/0]
*** NEXT [0/0]
*** AT SOME POINT IN TIME [0/0]
**** BIG CHANGE [0/1]
* STRUCTURE
** MODES
InCamera
SettingLayer
Setting
** SESSION
- path
*** PROJECT
**** ACTION STACK
MC -> move camera
P -> pencil
RF -> rectangle_fill

Action-Stack:

MC(1,0)
P
RF1/2
MC(2,2)
RF2/2
MC(0,1)

undo(): while not MC, revert()
    MC.revert()
    RF2/2.revert()
undo()
    MC.revert()
    RF1/1.revert()
undo()
    P.revert()


** STATE
|               | NoProjectOpen | ProjectOpen                         |
|---------------+---------------+-------------------------------------|
| NoProjectOpen |               | open_project, open_png, new_project |
| ProjectOpen   | close_project |                                     |
|               |               |                                     |

- Action on performing may be complete/incomplete
- Complete action on performing will return a new reverted Action
- Incomplete action on performing will return nothing

(or)

- Action on performing may be complete/incomplete
- Complete action on performing will become the reverted Action and return done
- Incomplete action on performing will return 



- value of action type will get created but wont be destroyed until it returns a Change::End or Change::StartEnd
