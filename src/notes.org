* TASKS [0/0]
** FUNCTIONAL [0/0]
*** [9/18] NEXT
- [X] remove colored as dependency of libpyxlene
- [3/3] (libpyxelene) palette has 2 methods to change specified color
  - [X] changeToExisting that takes index of other color in palette
  - [X] changeTo that takes direct hex value
  - [X] (libpyxelene) rectangularfill takes a palette_index too
- [X] Change::Lock and Change::Unlock to signal to action-manager to lock, or perform from an action that locks only causes action-manager to lock after Change::Start passed
- [X] failed action must enter a reset sequence. maybe make your life easier by making actions clonable?
- [X] layer error literature (Pixylene::export depends on Layer::merge returning 'can only merge >=2 layers')
- [ ] each layer has a blendmode (like in gimp) and tags are used at any time to render only tagged layers (dwm tags)
- [ ] action that lets you copy and paste pixels & doesn't lock the Action Manager
- [ ] wrapper for Camera::render() so that a Scene doesn't need to be passed as parameter
- [0/3] (pixylenetui)
  - [ ] defined palette contains 10 colors, foreground+background+eight defined colors
  - [ ] switchForeground is a wrapper that performs Palette.changeTo(1, <input>)
  - [ ] switchBackground is a wrapper that performs Palette.changeTo(2, <input>)
- [ ] project is immutable, scene-locking actions receive the mutable scene but can use the immutable project for things like Project.getFocus(), similar for camera-locking actions
- [ ] Action::perform_action returns Changes::Single or Change::Multiple
- [ ] ActionManager::undo returns UndoError
- [X] undo behavior as written on piece of paper
- [ ] get rid of camera.repeat, something of that nature should be managed by PixyleneDisplay
- [ ] Actions that work instantly like MoveCameraUp are fundamentally different from actions that require input like SetPaletteColor
- [X] Actions in different directory actions/
- [X] Pencil action that just does DrawOnce with blending
- [ ] Pixylene::empty
- [X] Action:redo because you did a bad job on Action:undo
- [X] new branch to implement savefile on Project
*** AT SOME POINT IN TIME [0/0]
**** [1/7] SMALL CHANGE
- [ ] Decorate::output()'s parameters need to be changed (String vs &static 'str)
- [ ] (pixylenetui) clear error after valid action has been entered and performed
- [ ] perform_action returns VecDeque of Change's
- [X] Png::open errors returned as debug strings similar to Png::save
- [ ] Mode that lets you 'write' colors line-by-line, left-to-right
- [ ] add_action may throw err if action-name already exists
- [ ] Mode that lets you draw the same color for a continued camera motion and pixels draw at every new camera focus
- [ ] Camera.get_focus() so that Camera.focus can be made private
- [ ] RectangularOutline Action
- [ ] Png to/fro Scene: fill more color-type/bit-depth combos
- [ ] "Dependency Justification" for paper like done on crossterm's github
**** [0/3] MEDIUM CHANGE
- [ ] an action that can let you write "tags" to pixels on a layer and let you search for them later
- [ ] savefiles be plaintext so people can use vcs on them
- [ ] better error reporting when action fails, maybe debug fmt for actions too?
- [ ] camera should be able to set focus to coord not in scene, just not be able to set_pixel there
**** [0/4] LARGE CHANGE
- [ ] builder pattern for app, so that can chain add_action and perform method calls
- [ ] toml for default impl of Pixylene::import & Pixylene::new that includes palette
- [ ] change-tree instead of change-stack, doesn't forget future changes after changes in undoed state
*** MAYBE / MAYBE NOT
**** [0/1] SMALL CHANGE
- [ ] camera has group of selected pixels (for visual mode)
**** MEDIUM CHANGE
- [ ] ActionManager::perform() directly takes dyn Action
**** LARGE CHANGE
** NON-FUNCTIONAL [0/0]
*** NEXT [0/0]
*** AT SOME POINT IN TIME [0/0]
**** BIG CHANGE [0/1]
* STRUCTURE
** MODES
InCamera
SettingLayer
Setting
** STATE
|               | NoProjectOpen | ProjectOpen                         |
|---------------+---------------+-------------------------------------|
| NoProjectOpen |               | open_project, open_png, new_project |
| ProjectOpen   | close_project |                                     |
|               |               |                                     |

- Action on performing may be complete/incomplete
- Complete action on performing will return a new reverted Action
- Incomplete action on performing will return nothing

(or)

- Action on performing may be complete/incomplete
- Complete action on performing will become the reverted Action and return done
- Incomplete action on performing will return 



- value of action type will get created but wont be destroyed until it returns a Change::End or Change::StartEnd

** SESSION
- project-path
** COMMANDS
| Command              | Arguments    | Session                                                           | Done |
|----------------------+--------------+-------------------------------------------------------------------+------|
| quit                 | -            | -                                                                 |      |
| open                 | project-path | > project-path; > project; < project-path?                        |      |
| save                 | -            | < project-path; < project                                         |      |
| import               | png-path     | > project; > project-path? (store in same directory); > png-path? |      |
| export               | png-path     | < png-path?                                                       |      |
| perform              | action-name  | < action-manager; < project                                       |      |
| view                 |              | < project                                                         |      |
| layer new            |              | < project; < background-color                                     |      |
| layer <> del         |              | < project                                                         |      |
| layer <> set_opacity | opacity      | < project                                                         |      |
| palette <> set       | color        | < project                                                         |      |
