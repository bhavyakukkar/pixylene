# whether the default keys should be emptied before considering the ones defined in the config
clear-all-keybinds = false

# padding to use in the editor
padding = 1

# sequence of commands that should run after every frame
every-frame = [
    "dl", #draw layer
    "ds", #draw statusline
]

# whether the map of keys should show full command names instead of command identifiers used when
# configuring keys
keymap-show-command-names = false

# the default namespace will be the namespace that pixylene starts with
default-namespace = "Main"


# the map of keybinds

[keys.Main]
# every keybind binds a single key 'k' to a sequence of commands 'f'
"alt-x" = [ "A" ]
";" = [ "la" ]

"left" = [{ a = { n = "cursors_left" } }]
"down" = [{ a = { n = "cursors_down" } }]
"up" = [{ a = { n = "cursors_up" } }]
"right" = [{ a = { n = "cursors_right" } }]

"h" = [{ a = { n = "cursors_left" } }]
"j" = [{ a = { n = "cursors_down" } }]
"k" = [{ a = { n = "cursors_up" } }]
"l" = [{ a = { n = "cursors_right" } }]

"0" = [{ a = { n = "goto_row_start" } }]
"$" = [{ a = { n = "goto_row_end" } }]
"g" = [{ a = { n = "goto_column_start" } }]
"shift-g" = [{ a = { n = "goto_column_end" } }]

"enter" = [{ a = { n = "pencil" } }]
"1" = [{ a = { n = "pencil1" } }]
"2" = [{ a = { n = "pencil2" } }]
"3" = [{ a = { n = "pencil3" } }]
"4" = [{ a = { n = "pencil4" } }]
"5" = [{ a = { n = "pencil5" } }]
"6" = [{ a = { n = "pencil6" } }]
"7" = [{ a = { n = "pencil7" } }]
"8" = [{ a = { n = "pencil8" } }]

"e" = [{ a = { n = "equip" } }]
"?" = [ "lc" ]

# go to Launcher namespace
"space" = [{ ns = { n = "Launcher" } }]
# go to Ooze namespace
"o" = [{ ns = { n = "Ooze" } }]
# go to Cursors namespace
"c" = [{ ns = { n = "Cursors" } }]
# go to Shapes namespace
"s" = [{ ns = { n = "Shapes" } }]
# go to View namespace
"ctrl-v" = [{ ns = { n = "View" } }]
# go to Layer namespace
"ctrl-l" = [{ ns = { n = "Layer" } }]


[keys.Launcher]
"f" = ["open", "dns"]


[keys.Ooze]
# navigation
"u" = [{a={ n="cursors_up" }}, {a={ n="cursors_left" }}, {a={ n="pencil" }}]
"k" = [{a={ n="cursors_up" }}, {a={ n="pencil" }}]
"p" = [{a={ n="cursors_up" }}, {a={ n="cursors_right" }}, {a={ n="pencil" }}]

"h" = [{a={ n="cursors_left" }}, {a={ n="pencil" }}]
"l" = [{a={ n="cursors_right" }}, {a={ n="pencil" }}]

"n" = [{a={ n="cursors_down" }}, {a={ n="cursors_left" }}, {a={ n="pencil" }}]
"j" = [{a={ n="cursors_down" }}, {a={ n="pencil" }}]
"m" = [{a={ n="cursors_down" }}, {a={ n="cursors_right" }}, {a={ n="pencil" }}]

# change equipped color
"1" = [{l={ s="actions.equip.index = 1" }}, {a={ n="equip" }}, {l={ s="actions['equip'].index = nil" }}]
"2" = [{l={ s="actions.equip.index = 2" }}, {a={ n="equip" }}, {l={ s="actions['equip'].index = nil" }}]
"3" = [{l={ s="actions.equip.index = 3" }}, {a={ n="equip" }}, {l={ s="actions['equip'].index = nil" }}]
"4" = [{l={ s="actions.equip.index = 4" }}, {a={ n="equip" }}, {l={ s="actions['equip'].index = nil" }}]
"5" = [{l={ s="actions.equip.index = 5" }}, {a={ n="equip" }}, {l={ s="actions['equip'].index = nil" }}]
"6" = [{l={ s="actions.equip.index = 6" }}, {a={ n="equip" }}, {l={ s="actions['equip'].index = nil" }}]
"7" = [{l={ s="actions.equip.index = 7" }}, {a={ n="equip" }}, {l={ s="actions['equip'].index = nil" }}]
"8" = [{l={ s="actions.equip.index = 8" }}, {a={ n="equip" }}, {l={ s="actions['equip'].index = nil" }}]

"esc" = [ "dns" ] # go back to default namespace


[keys.View]
# directly perform lua statement on keypress

"h" = [{ l = { s = """
    Project.focus = {
        ['layer'] = Project.focus.layer,
        ['coord'] = C(Project.focus.coord.x, Project.focus.coord.y - 1),
    }
""" }}]
"j" = [{ l = { s = """
    Project.focus = {
        ['layer'] = Project.focus.layer,
        ['coord'] = C(Project.focus.coord.x + 1, Project.focus.coord.y),
    }
""" }}]
"k" = [{ l = { s = """
    Project.focus = {
        ['layer'] = Project.focus.layer,
        ['coord'] = C(Project.focus.coord.x - 1, Project.focus.coord.y),
    }
""" }}]
"l" = [{ l = { s = """
    Project.focus = {
        ['layer'] = Project.focus.layer,
        ['coord'] = C(Project.focus.coord.x, Project.focus.coord.y + 1),
    }
""" } }]

"i" = [{ a = { n = "zoomin" } }]
"o" = [{ a = { n = "zoomout" } }]

"esc"   = [ "dns" ] # go back to default namespace
"enter" = [ "dns" ] # go back to default namespace


# LAYER namespace
[keys.Layer]
# all 3 of these keys perform an action then return to the default namespace
"n" = [{ a = { n = "layer_new" } }]
"o" = [{ a = { n = "layer_opacity" } }]
"m" = [{ a = { n = "layer_mute" } }]

"up" = [{ a = { n = "layernext" } }]
"k" = [{ a = { n = "layernext" } }]
"down" = [{ a = { n = "layerprev" } }]
"j" = [{ a = { n = "layerprev" } }]

"esc"   = [ "dns" ] # go back to default namespace
"enter" = [ "dns" ] # go back to default namespace


# CURSORS namespace
[keys.Cursors]
"left" = [{ a = { n = "cursors_dup_left" } }]
"down" = [{ a = { n = "cursors_dup_down" } }]
"up" = [{ a = { n = "cursors_dup_up" } }]
"right" = [{ a = { n = "cursors_dup_right" } }]

"h" = [{ a = { n = "cursors_dup_left" } }]
"j" = [{ a = { n = "cursors_dup_down" } }]
"k" = [{ a = { n = "cursors_dup_up" } }]
"l" = [{ a = { n = "cursors_dup_right" } }]

"r" = [{ a = { n = "cursors_reset" } }, "dns"]

"esc" = [ "dns" ] # go back to default namespace
"enter" = [ "dns" ] # go back to default namespace


# SHAPES namespace
[keys.Shapes]
"c" = [{ a = { n = "circularfill" } }, "dns"]
"C" = [{ a = { n = "circularoutline" } }, "dns"]
"f" = [{ a = { n = "fill" } }, "dns"]

"esc" = [ "dns" ] # go back to default namespace
"enter" = [ "dns" ] # go back to default namespace


# keys associated to function that are required to be known by pixylene
[required-keys]
force-quit = "alt-f4"

# vim-like
discard-command = "esc"
start-command = ":"

# emacs-like
#discard-command = "ctrl-g" 
#start-command = "alt-x"

# default attributes used by any new pixylene projects
[defaults]
dimensions = { x = 32, y = 32 }

# compatibility feature for terminals where two characters resemble a square [██]
repeat = { x = 1, y = 2 }   # uncomment is using pixylenetui
#repeat = { x = 1, y = 2 }  # uncomment if using pixylenegui

# color palette
# id is just an identifier & doesn't have to be in order
# c can be 24-bit #RRGGBB or 32-bit #RRGGBBAA
palette = [
    # gruvbox
    { id = 1 , c = "#282828" },
    { id = 2 , c = "#ebdbb2" },
    { id = 3 , c = "#cc241d" },
    { id = 4 , c = "#98971a" },
    { id = 5 , c = "#d79921" },
    { id = 6 , c = "#458588" },
    { id = 7 , c = "#b16286" },
    { id = 8 , c = "#689d6a" },
]
