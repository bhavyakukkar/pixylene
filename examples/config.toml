# whether the default keys should be emptied before considering the ones defined in the config
new_keys = false

# sequence of commands that should run after every frame
every_frame = [
    "dl", #draw layer
    "ds", #draw statusline
]

# whether the map of keys should show full command names instead of command identifiers used when
# configuring keys
keymap_show_command_names = false

# the map of keybinds

# DEFAULT namespace
[[keys]]
keys = [
    # every keybind binds a single key 'k' to a sequence of commands 'f'
    { k = "alt-x", f = [ "A" ] },
    { k = ";", f = [ "la" ] },

    { k = "left",  f = [{ a = { n = "cursors_left" } }] },
    { k = "down",  f = [{ a = { n = "cursors_down" } }] },
    { k = "up",    f = [{ a = { n = "cursors_up" } }] },
    { k = "right", f = [{ a = { n = "cursors_right" } }] },

    { k = "h", f = [{ a = { n = "cursors_left" } }] },
    { k = "j", f = [{ a = { n = "cursors_down" } }] },
    { k = "k", f = [{ a = { n = "cursors_up" } }] },
    { k = "l", f = [{ a = { n = "cursors_right" } }] },

    { k = "enter", f = [{ a = { n = "pencil" } }] },
    { k = "1", f = [{ a = { n = "pencil1" } }] },
    { k = "2", f = [{ a = { n = "pencil2" } }] },
    { k = "3", f = [{ a = { n = "pencil3" } }] },
    { k = "4", f = [{ a = { n = "pencil4" } }] },
    { k = "5", f = [{ a = { n = "pencil5" } }] },
    { k = "6", f = [{ a = { n = "pencil6" } }] },
    { k = "7", f = [{ a = { n = "pencil7" } }] },
    { k = "8", f = [{ a = { n = "pencil8" } }] },

    { k = "e", f = [{ a = { n = "equip" } }] },
    { k = "c", f = [{ a = { n = "palette_equipped_color" } }] },
    { k = "s", f = [{ a = { n = "hex_at_cursors" } }] },
    { k = "?", f = [ "lc" ] },

    # go to Ooze namespace
    { k = "shift-o", f = [{ ns = { n = "Ooze" } }] },
    # go to View namespace
    { k = "shift-v", f = [{ ns = { n = "View" } }] },
    # go to Layer namespace
    { k = "shift-l", f = [{ ns = { n = "Layer" } }] },
    # go to Cursors namespace
    { k = "shift-c", f = [{ ns = { n = "Cursors" } }] },
    # go to Shapes namespace
    { k = "shift-s", f = [{ ns = { n = "Shapes" } }] },
]

[[keys]]
name = "Ooze"
keys = [
    # navigation
    { k = "u", f = [{a={ n="cursors_up" }}, {a={ n="cursors_left" }}, {a={ n="pencil" }}] },
    { k = "k", f = [{a={ n="cursors_up" }}, {a={ n="pencil" }}] },
    { k = "p", f = [{a={ n="cursors_up" }}, {a={ n="cursors_right" }}, {a={ n="pencil" }}] },

    { k = "h", f = [{a={ n="cursors_left" }}, {a={ n="pencil" }}] },
    { k = "l", f = [{a={ n="cursors_right" }}, {a={ n="pencil" }}] },

    { k = "n", f = [{a={ n="cursors_down" }}, {a={ n="cursors_left" }}, {a={ n="pencil" }}] },
    { k = "j", f = [{a={ n="cursors_down" }}, {a={ n="pencil" }}] },
    { k = "m", f = [{a={ n="cursors_down" }}, {a={ n="cursors_right" }}, {a={ n="pencil" }}] },

    # change equipped color
    { k = "1", f = [{l={ s="actions.equip.index = 1" }}, {a={ n="equip" }}, {l={ s="actions['equip'].index = nil" }}] },
    { k = "2", f = [{l={ s="actions.equip.index = 2" }}, {a={ n="equip" }}, {l={ s="actions['equip'].index = nil" }}] },
    { k = "3", f = [{l={ s="actions.equip.index = 3" }}, {a={ n="equip" }}, {l={ s="actions['equip'].index = nil" }}] },
    { k = "4", f = [{l={ s="actions.equip.index = 4" }}, {a={ n="equip" }}, {l={ s="actions['equip'].index = nil" }}] },
    { k = "5", f = [{l={ s="actions.equip.index = 5" }}, {a={ n="equip" }}, {l={ s="actions['equip'].index = nil" }}] },
    { k = "6", f = [{l={ s="actions.equip.index = 6" }}, {a={ n="equip" }}, {l={ s="actions['equip'].index = nil" }}] },
    { k = "7", f = [{l={ s="actions.equip.index = 7" }}, {a={ n="equip" }}, {l={ s="actions['equip'].index = nil" }}] },
    { k = "8", f = [{l={ s="actions.equip.index = 8" }}, {a={ n="equip" }}, {l={ s="actions['equip'].index = nil" }}] },

    { k = "esc", f = [ "dns" ] }, # go back to default namespace
]

[[keys]]
name = "View"
keys = [
    # directly perform lua statement on keypress

    { k = "h", f = [{ l = { s = """
        Project.focus = {
            ['layer'] = Project.focus.layer,
            ['coord'] = C(Project.focus.coord.x, Project.focus.coord.y - 1),
        }
    """ }}] },
    { k = "j", f = [{ l = { s = """
        Project.focus = {
            ['layer'] = Project.focus.layer,
            ['coord'] = C(Project.focus.coord.x + 1, Project.focus.coord.y),
        }
    """ }}] },
    { k = "k", f = [{ l = { s = """
        Project.focus = {
            ['layer'] = Project.focus.layer,
            ['coord'] = C(Project.focus.coord.x - 1, Project.focus.coord.y),
        }
    """ }}] },
    { k = "l", f = [{ l = { s = """
        Project.focus = {
            ['layer'] = Project.focus.layer,
            ['coord'] = C(Project.focus.coord.x, Project.focus.coord.y + 1),
        }
    """ } }] },

    { k = "i", f = [{ a = { n = "zoomin" } }] },
    { k = "o", f = [{ a = { n = "zoomout" } }] },

    { k = "esc", f = [ "dns" ] }, # go back to default namespace
]

# LAYER namespace
[[keys]]
name = "Layer"
keys = [
    # all 3 of these keys perform an action then return to the default namespace
    { k = "n", f = [{ a = { n = "layer_new" } }, "dns"] },
    { k = "o", f = [{ a = { n = "layer_opacity" } }, "dns"] },
    { k = "m", f = [{ a = { n = "layer_mute" } }, "dns"] },

    { k = "esc", f = [ "dns" ] }, # go back to default namespace
]

# CURSORS namespace
[[keys]]
name = "Cursors"
keys = [
    { k = "left",  f = [{ a = { n = "cursors_dup_left" } }] },
    { k = "down",  f = [{ a = { n = "cursors_dup_down" } }] },
    { k = "up",    f = [{ a = { n = "cursors_dup_up" } }] },
    { k = "right", f = [{ a = { n = "cursors_dup_right" } }] },

    { k = "h", f = [{ a = { n = "cursors_dup_left" } }] },
    { k = "j", f = [{ a = { n = "cursors_dup_down" } }] },
    { k = "k", f = [{ a = { n = "cursors_dup_up" } }] },
    { k = "l", f = [{ a = { n = "cursors_dup_right" } }] },

    { k = "r", f = [{ a = { n = "cursors_reset" } }, "dns"] },

    { k = "esc", f = [ "dns" ] }, # go back to default namespace
]

# SHAPES namespace
[[keys]]
name = "Shapes"
keys = [
    { k = "c", f = [{ a = { n = "circularoutline" } }, "dns"] },
    { k = "f", f = [{ a = { n = "fill" } }, "dns"] },

    { k = "esc", f = [ "dns" ] }, # go back to default namespace
]


# keys associated to function that are required to be known by pixylene
[required_keys]
force_quit = "alt-f4"

# vim-like
discard_command = "esc"
start_command = ":"

# emacs-like
#discard_command = "ctrl-g" 
#start_command = "alt-x"

# default attributes used by any new pixylene projects
[defaults]
dimensions = { x = 32, y = 32 }

# compatibility feature for terminals where two characters resemble a square [██]
repeat = { x = 1, y = 2 }   # uncomment is using pixylenetui
#repeat = { x = 1, y = 2 }  # uncomment if using pixylenegui

# color palette
# id is just an identifier & doesn't have to be in order
# c can be 24-bit #RRGGBB or 32-bit #RRGGBBAA
palette = [
    # gruvbox
    { id = 1 , c = "#282828" },
    { id = 2 , c = "#ebdbb2" },
    { id = 3 , c = "#cc241d" },
    { id = 4 , c = "#98971a" },
    { id = 5 , c = "#d79921" },
    { id = 6 , c = "#458588" },
    { id = 7 , c = "#b16286" },
    { id = 8 , c = "#689d6a" },
]
