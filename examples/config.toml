# whether the default keys should be emptied before considering the ones defined in the config
new_keys = false

# sequence of commands that should run after every frame
every_frame = [ "PreviewFocusLayer", "UpdateStatusline" ]

# the map of keybinds

# DEFAULT namespace
[[keys]]
keys = [
    # every keybind binds a single key 'k' to a sequence of commands 'f'
    { k = { c = { Char = ';' } }, f = [ "RunLastAction" ] },

    { k = { c = "Left" },  f = [{ a = { n = "cursors_left" } }] },
    { k = { c = "Down" },  f = [{ a = { n = "cursors_down" } }] },
    { k = { c = "Up" },    f = [{ a = { n = "cursors_up" } }] },
    { k = { c = "Right" }, f = [{ a = { n = "cursors_right" } }] },

    { k = { c = { Char = 'h' } }, f = [{ a = { n = "cursors_left" } }] },
    { k = { c = { Char = 'j' } }, f = [{ a = { n = "cursors_down" } }] },
    { k = { c = { Char = 'k' } }, f = [{ a = { n = "cursors_up" } }] },
    { k = { c = { Char = 'l' } }, f = [{ a = { n = "cursors_right" } }] },

    { k = { c = { Char = 'i' } }, f = [{ a = { n = "zoomin" } }] },
    { k = { c = { Char = 'o' } }, f = [{ a = { n = "zoomout" } }] },
    
    { k = { c = { Char = '1' } }, f = [{ a = { n = "pencil1" } }] },
    { k = { c = { Char = '2' } }, f = [{ a = { n = "pencil2" } }] },
    { k = { c = { Char = '3' } }, f = [{ a = { n = "pencil3" } }] },
    { k = { c = { Char = '4' } }, f = [{ a = { n = "pencil4" } }] },
    { k = { c = { Char = '5' } }, f = [{ a = { n = "pencil5" } }] },
    { k = { c = { Char = '6' } }, f = [{ a = { n = "pencil6" } }] },
    { k = { c = { Char = '7' } }, f = [{ a = { n = "pencil7" } }] },
    { k = { c = { Char = '8' } }, f = [{ a = { n = "pencil8" } }] },

    # go to Layer namespace
    { k = { m = "CONTROL", c = { Char = 'l' } }, f = [{ EnterNamespace = { n = "Layer" } }] },
    # go to Cursors namespace
    { k = { m = "CONTROL", c = { Char = 'c' } }, f = [{ EnterNamespace = { n = "Cursors" } }] },
    # go to Shapes namespace
    { k = { m = "CONTROL", c = { Char = 's' } }, f = [{ EnterNamespace = { n = "Shapes" } }] },
]

# LAYER namespace
[[keys]]
name = "Layer"
keys = [
    { k = { c = { Char = 'n' }, m = "" }, f = [{ a = { n = "layer_new" } }, "EnterDefaultNamespace"] },
    { k = { c = { Char = 'o' }, m = "" }, f = [{ a = { n = "layer_opacity" } }, "EnterDefaultNamespace"] },
    { k = { c = { Char = 'm' }, m = "" }, f = [{ a = { n = "layer_mute" } }, "EnterDefaultNamespace"] },

    { k = { c = "Esc" }, f = [ "EnterDefaultNamespace" ] }, # go back to default namespace
]

# CURSORS namespace
[[keys]]
name = "Cursors"
keys = [
    { k = { c = "Left" },  f = [{ a = { n = "cursors_dup_left" } }] },
    { k = { c = "Down" },  f = [{ a = { n = "cursors_dup_down" } }] },
    { k = { c = "Up" },    f = [{ a = { n = "cursors_dup_up" } }] },
    { k = { c = "Right" }, f = [{ a = { n = "cursors_dup_right" } }] },

    { k = { c = { Char = 'h' } }, f = [{ a = { n = "cursors_dup_left" } }] },
    { k = { c = { Char = 'j' } }, f = [{ a = { n = "cursors_dup_down" } }] },
    { k = { c = { Char = 'k' } }, f = [{ a = { n = "cursors_dup_up" } }] },
    { k = { c = { Char = 'l' } }, f = [{ a = { n = "cursors_dup_right" } }] },

    { k = { c = { Char = 'r' } }, f = [{ a = { n = "cursors_reset" } }, "EnterDefaultNamespace"] },

    { k = { c = "Esc" }, f = [ "EnterDefaultNamespace" ] }, # go back to default namespace
]

# SHAPES namespace
[[keys]]
name = "Shapes"
keys = [
    { k = { c = { Char = 'c' } }, f = [{ a = { n = "circularoutline" } }, "EnterDefaultNamespace"] },

    { k = { c = "Esc" }, f = [ "EnterDefaultNamespace" ] }, # go back to default namespace
]


# keys associated to function that are required to be known by pixylene
[required_keys]
force_quit = { c = { F = 4 }, m = "ALT" }

# vim-like
discard_command = { c = "Esc", m = "" }
start_command = { c = { Char = ':' }, m = "" }

# emacs-like
#discard_command = { c = { Char = 'g' }, m = "CONTROL" } 
#start_command = { c = { Char = 'x' }, m = "ALT" }

# default attributes used by any new pixylene projects
[defaults]
dimensions = { x = 32, y = 32 }

# compatibility feature for terminals where two characters resemble a square [██]
repeat = { x = 1, y = 2 }   # uncomment is using pixylenetui
#repeat = { x = 1, y = 2 }  # uncomment if using pixylenegui

# color palette
# id is just an identifier & doesn't have to be in order
# c can be 24-bit #RRGGBB or 32-bit #RRGGBBAA
palette = [
    # gruvbox
    { id = 1 , c = "#282828" },
    { id = 2 , c = "#ebdbb2" },
    { id = 3 , c = "#cc241d" },
    { id = 4 , c = "#98971a" },
    { id = 5 , c = "#d79921" },
    { id = 6 , c = "#458588" },
    { id = 7 , c = "#b16286" },
    { id = 8 , c = "#689d6a" },
]
